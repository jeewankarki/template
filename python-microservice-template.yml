apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: python-microservice-template
  title: python microservice template
  description: Software template for generating the new microservice project using python.
  tags: 
    - recommended
    - python-microservice
    - python
spec:
  owner: cbre
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Create new project
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the project
          ui:autofocus: true
          ui:options:
            rows: 5

        description:
          title: Description
          type: string
          description: Brief description of the project
          ui:autofocus: true
          ui:options:
            rows: 5

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: DevxRepoUrlPicker
          ui:options:
            allowedHosts:
              - dev.azure.com
              - github.com
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
              additionalScopes: 
                github: 
                  - repo
                  - user
                  - read:org
              
  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch template & Base project 
      action: fetch:template
      input:
        url: ./scaffold
        values:
          name: ${{ parameters.name }}

    - id: publish-github
      name: Publish to GitHub Organization
      if: ${{ parameters.repoUrl.indexOf("github.com") == 0 }}
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: "main"
        token: ${{ secrets.USER_OAUTH_TOKEN }}

    - id: publish-azure
      name: Publish To Azure Devops
      if: ${{ parameters.repoUrl.indexOf("dev.azure.com") == 0 }}
      action: publish:azure
      input:
        allowedHosts: ["dev.azure.com"]
        repoUrl: ${{ parameters.repoUrl }}
        description: ${{ parameters.name }}
        defaultBranch: "main"
        token: ${{ secrets.USER_OAUTH_TOKEN }}

    - id: collect-analytics-data
      name: Collect Analytics
      action: devx:template-analytics
      input:
        templateName: 'python-microservice-template'
        projectSourceLocation: './scaffold'
        username: 'test-user'
        repoType: ${{ parameters.repoUrl }}
        finalRepoLocation: ${{ '' + parameters.repoUrl.indexOf("dev.azure.com") == 0 ? steps['publish-azure'].output.repoContentsUrl: steps['publish-github'].output.repoContentsUrl }}
  
  
